[{"D:\\react\\PROJEKT\\adresar-master\\src\\index.js":"1","D:\\react\\PROJEKT\\adresar-master\\src\\App.js":"2","D:\\react\\PROJEKT\\adresar-master\\src\\store\\auth-context.js":"3","D:\\react\\PROJEKT\\adresar-master\\src\\pages\\HomePage.js":"4","D:\\react\\PROJEKT\\adresar-master\\src\\pages\\AuthPage.js":"5","D:\\react\\PROJEKT\\adresar-master\\src\\components\\Profile\\UserProfile.js":"6","D:\\react\\PROJEKT\\adresar-master\\src\\components\\Layout\\Layout.js":"7","D:\\react\\PROJEKT\\adresar-master\\src\\components\\Layout\\MainNavigation.js":"8","D:\\react\\PROJEKT\\adresar-master\\src\\components\\StartingPage\\StartingPageContent.js":"9","D:\\react\\PROJEKT\\adresar-master\\src\\components\\Profile\\ProfileForm.js":"10","D:\\react\\PROJEKT\\adresar-master\\src\\components\\Auth\\AuthForm.js":"11","D:\\react\\PROJEKT\\adresar-master\\src\\hooks\\userInput.js":"12","D:\\react\\PROJEKT\\adresar-master\\src\\pages\\EditContactPage.js":"13","D:\\react\\PROJEKT\\adresar-master\\src\\pages\\ContactPage.js":"14"},{"size":387,"mtime":1655410377000,"results":"15","hashOfConfig":"16"},{"size":1666,"mtime":1656369058970,"results":"17","hashOfConfig":"16"},{"size":2169,"mtime":1655410377000,"results":"18","hashOfConfig":"16"},{"size":171,"mtime":1655410377000,"results":"19","hashOfConfig":"16"},{"size":130,"mtime":1655410377000,"results":"20","hashOfConfig":"16"},{"size":278,"mtime":1655410377000,"results":"21","hashOfConfig":"16"},{"size":246,"mtime":1655410377000,"results":"22","hashOfConfig":"16"},{"size":989,"mtime":1655410377000,"results":"23","hashOfConfig":"16"},{"size":240,"mtime":1655410377000,"results":"24","hashOfConfig":"16"},{"size":1357,"mtime":1655410377000,"results":"25","hashOfConfig":"16"},{"size":5649,"mtime":1655410377000,"results":"26","hashOfConfig":"16"},{"size":746,"mtime":1655410377000,"results":"27","hashOfConfig":"16"},{"size":146,"mtime":1656369531887,"results":"28","hashOfConfig":"16"},{"size":134,"mtime":1656367910590,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"568sf3",{"filePath":"33","messages":"34","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\react\\PROJEKT\\adresar-master\\src\\index.js",[],["61","62"],"D:\\react\\PROJEKT\\adresar-master\\src\\App.js",["63"],"D:\\react\\PROJEKT\\adresar-master\\src\\store\\auth-context.js",[],"D:\\react\\PROJEKT\\adresar-master\\src\\pages\\HomePage.js",[],"D:\\react\\PROJEKT\\adresar-master\\src\\pages\\AuthPage.js",[],"D:\\react\\PROJEKT\\adresar-master\\src\\components\\Profile\\UserProfile.js",[],"D:\\react\\PROJEKT\\adresar-master\\src\\components\\Layout\\Layout.js",[],"D:\\react\\PROJEKT\\adresar-master\\src\\components\\Layout\\MainNavigation.js",[],"D:\\react\\PROJEKT\\adresar-master\\src\\components\\StartingPage\\StartingPageContent.js",[],"D:\\react\\PROJEKT\\adresar-master\\src\\components\\Profile\\ProfileForm.js",[],"D:\\react\\PROJEKT\\adresar-master\\src\\components\\Auth\\AuthForm.js",["64"],"import { useState, useRef, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport AuthContext from \"../../store/auth-context\";\nimport useInput from \"../../hooks/userInput\";\nimport classes from \"./AuthForm.module.css\";\n\nconst AuthForm = () => {\n  const history = useHistory();\n  // const emailInputRef = useRef();\n  // const passwordInputRef = useRef();\n\n  const authCtx = useContext(AuthContext);\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const validEmailFormat = /^\\S+@\\S+\\.\\S{2}/;\n\n  //email\n  const {\n    value: enteredEmail,\n    isValid: emailIsValid,\n    hasError: emailInputHasError,\n    inputChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    resetInputs: resetEmailInput,\n  } = useInput((value) => value.match(validEmailFormat));\n\n  //password\n  let specialChars = /[!#$+-]/;\n  const hasNumber = /\\d/;\n  const {\n    value: enteredPassword,\n    isValid: passwordIsValid,\n    hasError: passwordInputHasError,\n    inputChangeHandler: passwordChangeHandler,\n    inputBlurHandler: passwordBlurHandler,\n    resetInputs: resetPasswordInput,\n  } = useInput((value) =>{\n    if(value.trim().length > 5){\n      if(hasNumber.test(value)){\n        if(specialChars.test(value)){\n          return true;\n        }\n      }\n    }\n  });\n    \n    /* console.log('trimmed value', value.trim().length) &&\n      (value.trim().length > 5) &&\n      console.log('hasNumber test: ', hasNumber.test(value))&&\n      hasNumber.test(value) &&\n      console.log('has specialChars test: ', specialChars.test(value))&&\n      specialChars.test(value)); */\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    if (!emailIsValid || !passwordIsValid) {\n      return;\n    }\n\n    // const enteredEmail = emailInputRef.current.value;\n    // const enteredPassword = passwordInputRef.current.value;\n\n    //dodat auth\n\n    setIsLoading(true);\n    let url;\n    if (isLogin) {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDa2pV8Ct34q84wK_2DrS2ugSE8olf5I8U\";\n    } else {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDa2pV8Ct34q84wK_2DrS2ugSE8olf5I8U\";\n    }\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        setIsLoading(false);\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then((data) => {\n            // let errorMessage = \"Authentication failed!\";\n            // if (data && data.error && data.error.message) {   //proslijeduje firebase error\n            //   errorMessage = data.error.message;\n            // }\n            let errorMessage = \"\";\n            if (data.error.message === \"INVALID_PASSWORD\") {\n              errorMessage = \"Invalid password\";\n            } else if (data.error.message === \"EMAIL_EXISTS\") {\n              errorMessage = \"Email already exists\";\n            } else if (data.error.message === \"INVALID_EMAIL\") {\n              errorMessage = \"Email is invalid!\";\n            } else {\n              errorMessage = \"This e-mail does not exist\";\n            }\n\n            throw new Error(errorMessage);\n          });\n        }\n      })\n      .then((data) => {\n        const expirationTime = new Date(\n          new Date().getTime() + +data.expiresIn * 1000\n        );\n        authCtx.login(data.idToken, expirationTime.toISOString());\n        history.replace(\"/adresar\");\n      })\n      .catch((err) => {\n        alert(err.message);\n      });\n    resetEmailInput();\n    resetPasswordInput();\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            required\n            //ref={emailInputRef}\n            onChange={emailChangeHandler}\n            onBlur={emailBlurHandler}\n            value={enteredEmail}\n          />\n          {emailInputHasError && (\n            <p className={classes[\"error-msg\"]}>\n              Please enter a valid email address\n            </p>\n          )}\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            required\n            // ref={passwordInputRef}\n            onChange={passwordChangeHandler}\n            onBlur={passwordBlurHandler}\n            value={enteredPassword}\n          />\n          {passwordInputHasError && (\n            <p>\n              Password must be at least 6 characters long and contain at least\n              one number and one special character\n            </p>\n          )}\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && (\n            <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\n          )}\n          {isLoading && <p>Loading..</p>}\n          <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n","D:\\react\\PROJEKT\\adresar-master\\src\\hooks\\userInput.js",["65"],"import React, { useState } from \"react\";\n\nconst useInput = validateInput => {\n    const [inputValue, setInputValue] = useState(\"\");\n    const [isFocused, setIsFocused] = useState(false);\n\n    const inputIsValid = validateInput(inputValue);\n    const hasError = !inputIsValid && isFocused;\n\n    const inputChangeHandler = e => {\n        setInputValue(e.target.value);\n    }\n\n    const inputBlurHandler = e => {\n        setIsFocused(true);\n    }\n\n    const resetInputs = () => {\n        setInputValue('');\n        setIsFocused(false);\n    }\n\n    return {\n        value: inputValue,\n        isValid: inputIsValid,\n        hasError: hasError,\n        inputChangeHandler,\n        inputBlurHandler,\n        resetInputs\n    }\n}\n\nexport default useInput;","D:\\react\\PROJEKT\\adresar-master\\src\\pages\\EditContactPage.js",["66"],"D:\\react\\PROJEKT\\adresar-master\\src\\pages\\ContactPage.js",["67"],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":null,"fatal":true,"severity":2,"message":"72"},{"ruleId":"73","severity":1,"message":"74","line":1,"column":20,"nodeType":"75","messageId":"76","endLine":1,"endColumn":26},{"ruleId":"73","severity":1,"message":"77","line":1,"column":8,"nodeType":"75","messageId":"76","endLine":1,"endColumn":13},{"ruleId":null,"fatal":true,"severity":2,"message":"72"},{"ruleId":null,"fatal":true,"severity":2,"message":"72"},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"Parsing error: Cannot find module './parse-with-scope'\nRequire stack:\n- D:\\react\\PROJEKT\\adresar-master\\node_modules\\babel-eslint\\lib\\index.js\n- D:\\react\\PROJEKT\\adresar-master\\node_modules\\@eslint\\eslintrc\\lib\\config-array-factory.js\n- D:\\react\\PROJEKT\\adresar-master\\node_modules\\@eslint\\eslintrc\\lib\\index.js\n- D:\\react\\PROJEKT\\adresar-master\\node_modules\\eslint\\lib\\cli-engine\\cli-engine.js\n- D:\\react\\PROJEKT\\adresar-master\\node_modules\\eslint\\lib\\cli-engine\\index.js\n- D:\\react\\PROJEKT\\adresar-master\\node_modules\\eslint\\lib\\api.js\n- D:\\react\\PROJEKT\\adresar-master\\node_modules\\eslint-webpack-plugin\\dist\\getESLint.js\n- D:\\react\\PROJEKT\\adresar-master\\node_modules\\eslint-webpack-plugin\\dist\\linter.js\n- D:\\react\\PROJEKT\\adresar-master\\node_modules\\eslint-webpack-plugin\\dist\\index.js\n- D:\\react\\PROJEKT\\adresar-master\\node_modules\\eslint-webpack-plugin\\dist\\cjs.js\n- D:\\react\\PROJEKT\\adresar-master\\node_modules\\react-scripts\\config\\webpack.config.js\n- D:\\react\\PROJEKT\\adresar-master\\node_modules\\react-scripts\\scripts\\start.js","no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'React' is defined but never used.","no-global-assign","no-unsafe-negation"]